#include <iostream>
#include <string>
using namespace std;

const int MAX_FLIGHTS = 5; // Maximum number of flights
const int MAX_SEATS = 5;   // Maximum seats per flight

// Function prototypes
void InitializeFlights(string flightTimes[], string passengerNames[][MAX_SEATS]);
void DisplayFlights(const string flightTimes[], const string passengerNames[][MAX_SEATS]);
void ReserveSeat(string flightTimes[], string passengerNames[][MAX_SEATS]);
void CancelReservation(string flightTimes[], string passengerNames[][MAX_SEATS]);
void DisplaySeats(const string& flightTime, const string passengerNames[]);

int main() {
    string flightTimes[MAX_FLIGHTS];
    string passengerNames[MAX_FLIGHTS][MAX_SEATS];

    InitializeFlights(flightTimes, passengerNames);

    int choice;
    do {
        cout << "WELCOME TO MAJJ AIRLINES!\n";
        cout << "Flight Reservation\n";
        cout << "1. View Flights\n";
        cout << "2. Reserve a Seat\n";
        cout << "3. Cancel a Reservation\n";
        cout << "0. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
        case 1:
            system("cls");
            DisplayFlights(flightTimes, passengerNames);
            break;
        case 2:
            ReserveSeat(flightTimes, passengerNames);
            break;
        case 3:
            system("cls");
            CancelReservation(flightTimes, passengerNames);
            break;
        case 0:
            system("cls");
            cout << "Thank you for using the Flight Reservation System.\n";
            break;
        default:
            system("cls");
            cout << "Invalid choice. Try again.\n";
        }
        cout << endl;
    } while (choice != 0);

    return 0;
}

// Initialize flight times and seats
void InitializeFlights(string flightTimes[], string passengerNames[][MAX_SEATS]) {
    for (int i = 0; i < MAX_FLIGHTS; ++i) {
        flightTimes[i] = "Flight at " + to_string(9 + i) + ":00 AM";
        for (int j = 0; j < MAX_SEATS; ++j) {
            passengerNames[i][j] = ""; // Empty string indicates the seat is available
        }
    }
}

// Display all flights and their availability
void DisplayFlights(const string flightTimes[], const string passengerNames[][MAX_SEATS]) {
    cout << "Available Flights:\n";
    for (int i = 0; i < MAX_FLIGHTS; ++i) {
        int availableSeats = 0;
        for (int j = 0; j < MAX_SEATS; ++j) {
            if (passengerNames[i][j].empty()) availableSeats++;
        }
        cout << i + 1 << ". " << flightTimes[i] << " (Available Seats: " << availableSeats << ")\n";
    }
}

// Reserve a seat on a selected flight
void ReserveSeat(string flightTimes[], string passengerNames[][MAX_SEATS]) {
    int flightChoice;
    cout << "Select a flight (1-" << MAX_FLIGHTS << "): ";
    cin >> flightChoice;

    if (flightChoice < 1 || flightChoice > MAX_FLIGHTS) {
        cout << "Invalid flight selection.\n";
        return;
    }

    int flightIndex = flightChoice - 1;
    DisplaySeats(flightTimes[flightIndex], passengerNames[flightIndex]);

    int seatChoice;
    cout << "Select a seat (1-" << MAX_SEATS << "): ";
    cin >> seatChoice;

    if (seatChoice < 1 || seatChoice > MAX_SEATS) {
        cout << "Invalid seat selection.\n";
        return;
    }

    int seatIndex = seatChoice - 1;
    if (!passengerNames[flightIndex][seatIndex].empty()) {
        cout << "Seat already reserved.\n";
    }
    else {
        cout << "Enter your name: ";
        cin.ignore();
        getline(cin, passengerNames[flightIndex][seatIndex]);
        cout << "Seat reserved successfully for " << passengerNames[flightIndex][seatIndex] << ".\n";
    }
}

// Cancel a reservati
